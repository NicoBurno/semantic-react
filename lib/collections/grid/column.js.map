{"version":3,"sources":["../../../src/components/collections/grid/column.jsx"],"names":[],"mappings":"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","file":"column.js","sourcesContent":["import React from 'react';\r\nimport { Numbers, validateClassProps } from '../../utilities';\r\nimport DefaultProps from '../../defaultProps';\r\nimport classNames from 'classnames';\r\n\r\nconst validProps = {\r\n    aligned: ['right', 'left', 'justified', 'center'],\r\n    floated: ['right', 'left'],\r\n    valigned: ['top', 'middle', 'bottom']\r\n\r\n};\r\n\r\nfunction getClasses(props) {\r\n    let classes = {\r\n        column: props.defaultClasses\r\n    };\r\n    \r\n    classes[props.color] = !!props.color;\r\n    \r\n    // Widths\r\n    if (props.width && props.width > 0 && props.width <= 16) {\r\n        classes[`${Numbers[props.width]} wide`] = true;\r\n    }\r\n    \r\n    if (props.mobileWidth && props.mobileWidth > 0 && props.mobileWidth <= 16) {\r\n        classes[`${Numbers[props.mobileWidth]} wide mobile`] = true;\r\n    }\r\n    \r\n    if (props.tabletWidth && props.tabletWidth > 0 && props.tabletWidth <= 16) {\r\n        classes[`${Numbers[props.tabletWidth]} wide tablet`] = true;\r\n    }\r\n    \r\n    if (props.computerWidth && props.computerWidth > 0 && props.computerWidth <= 16) {\r\n        classes[`${Numbers[props.computerWidth]} wide computer`] = true;\r\n    }\r\n    \r\n    if (props.largeScreenWidth && props.largeScreenWidth > 0 && props.largeScreenWidth <= 16) {\r\n        classes[`${Numbers[props.largeScreenWidth]} wide large screen`] = true;\r\n    }\r\n    \r\n    if (props.wideScreenWidth && props.wideScreenWidth > 0 && props.wideScreenWidth <= 16) {\r\n        classes[`${Numbers[props.wideScreenWidth]} wide widescreen`] = true;\r\n    }\r\n    \r\n    if (props.only) {\r\n        let device;\r\n        if (Array.isArray(props.only)) {\r\n            device = props.only.join(' ');\r\n        } else {\r\n            device = props.only;\r\n        }\r\n        if (device) {\r\n            classes[`${device} only`] = true;\r\n        }\r\n    }\r\n    \r\n    return validateClassProps(classes, props, validProps, { valigned: 'aligned' });\r\n}\r\n\r\n/**\r\n * Grid column\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nlet Column = (props) => {\r\n    /* eslint-disable no-use-before-define */\r\n    let {\r\n        aligned, component, children, defaultClasses, floated, only, width, mobileWidth, tabletWidth,\r\n        computerWidth, largeScreenWidth, wideScreenWidth, valigned, ...other\r\n    } = props;\r\n    /* eslint-enable no-use-before-define */\r\n    let Component = component;\r\n    other.className = classNames(other.className, getClasses(props));\r\n    \r\n    return (\r\n        <Component {...other}>\r\n            {children}\r\n        </Component>\r\n    );\r\n};\r\n\r\nColumn.propTypes = {\r\n    ...DefaultProps.propTypes,\r\n    /**\r\n     * Horizontal content alignment\r\n     */\r\n    aligned: React.PropTypes.oneOf(['right', 'left', 'center']),\r\n    /**\r\n     * Float to the right or left edge of the row\r\n     */\r\n    floated: React.PropTypes.oneOf(['right', 'left']),\r\n    /**\r\n     * Only visible for types. Could be single type string or array, i.e. only={[\"mobile\",\"tablet\"]}\r\n     */\r\n    only: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf([\r\n            'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\r\n        ]),\r\n        React.PropTypes.arrayOf(React.PropTypes.oneOf([\r\n            'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\r\n        ]))\r\n    ]),\r\n    /**\r\n     * Column color\r\n     */\r\n    color: React.PropTypes.string,\r\n    /**\r\n     * Column width for all device types\r\n     */\r\n    width: React.PropTypes.number,\r\n    /**\r\n     * Column width for mobile\r\n     */\r\n    mobileWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for tablet\r\n     */\r\n    tabletWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for computer\r\n     */\r\n    computerWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for large screens\r\n     */\r\n    largeScreenWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for wide screens\r\n     */\r\n    wideScreenWidth: React.PropTypes.number,\r\n    /**\r\n     * Vertical content alignment\r\n     */\r\n    valigned: React.PropTypes.oneOf(['top', 'middle', 'bottom'])\r\n};\r\n\r\nColumn.defaultProps = {\r\n    ...DefaultProps.defaultProps\r\n};\r\n\r\nexport default Column;\r\n"]}