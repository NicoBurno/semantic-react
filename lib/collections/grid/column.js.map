{"version":3,"sources":["../../../src/components/collections/grid/column.jsx"],"names":[],"mappings":";;;;;;;;;;;;qBAAkB,OAAO;;;;yBACmB,iBAAiB;;4BACT,oBAAoB;;0BACjD,YAAY;;;;sBAChB,QAAQ;;;;AAE3B,IAAM,UAAU,GAAG;AACf,WAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC;AACjD,WAAO,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;AAC1B,YAAQ,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;;CAExC,CAAC;;AAEF,SAAS,UAAU,CAAC,KAAK,EAAE;AACvB,QAAI,OAAO,GAAG;AACV,cAAM,EAAE,KAAK,CAAC,cAAc;KAC/B,CAAC;;AAEF,WAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;;;AAGrC,QAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE;AACrD,eAAO,CAAI,mBAAQ,KAAK,CAAC,KAAK,CAAC,WAAQ,GAAG,IAAI,CAAC;KAClD;;AAED,QAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK,CAAC,WAAW,IAAI,EAAE,EAAE;AACvE,eAAO,CAAI,mBAAQ,KAAK,CAAC,WAAW,CAAC,kBAAe,GAAG,IAAI,CAAC;KAC/D;;AAED,QAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK,CAAC,WAAW,IAAI,EAAE,EAAE;AACvE,eAAO,CAAI,mBAAQ,KAAK,CAAC,WAAW,CAAC,kBAAe,GAAG,IAAI,CAAC;KAC/D;;AAED,QAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC,IAAI,KAAK,CAAC,aAAa,IAAI,EAAE,EAAE;AAC7E,eAAO,CAAI,mBAAQ,KAAK,CAAC,aAAa,CAAC,oBAAiB,GAAG,IAAI,CAAC;KACnE;;AAED,QAAI,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,gBAAgB,GAAG,CAAC,IAAI,KAAK,CAAC,gBAAgB,IAAI,EAAE,EAAE;AACtF,eAAO,CAAI,mBAAQ,KAAK,CAAC,gBAAgB,CAAC,wBAAqB,GAAG,IAAI,CAAC;KAC1E;;AAED,QAAI,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,eAAe,GAAG,CAAC,IAAI,KAAK,CAAC,eAAe,IAAI,EAAE,EAAE;AACnF,eAAO,CAAI,mBAAQ,KAAK,CAAC,eAAe,CAAC,sBAAmB,GAAG,IAAI,CAAC;KACvE;;AAED,QAAI,KAAK,CAAC,IAAI,EAAE;AACZ,YAAI,MAAM,YAAA,CAAC;AACX,YAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAC3B,kBAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjC,MAAM;AACH,kBAAM,GAAG,KAAK,CAAC,IAAI,CAAC;SACvB;AACD,YAAI,MAAM,EAAE;AACR,mBAAO,CAAI,MAAM,WAAQ,GAAG,IAAI,CAAC;SACpC;KACJ;;AAED,WAAO,mCAAmB,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;CAClF;;;;;;;;AAQD,IAAI,MAAM,GAAG,gBAAC,KAAK,EAAK;;QAGhB,OAAO,GAEP,KAAK,CAFL,OAAO;QAAE,SAAS,GAElB,KAAK,CAFI,SAAS;QAAE,QAAQ,GAE5B,KAAK,CAFe,QAAQ;QAAE,cAAc,GAE5C,KAAK,CAFyB,cAAc;QAAE,OAAO,GAErD,KAAK,CAFyC,OAAO;QAAE,IAAI,GAE3D,KAAK,CAFkD,IAAI;QAAE,KAAK,GAElE,KAAK,CAFwD,KAAK;QAAE,WAAW,GAE/E,KAAK,CAF+D,WAAW;QAAE,WAAW,GAE5F,KAAK,CAF4E,WAAW;QAC5F,aAAa,GACb,KAAK,CADL,aAAa;QAAE,gBAAgB,GAC/B,KAAK,CADU,gBAAgB;QAAE,eAAe,GAChD,KAAK,CAD4B,eAAe;QAAE,QAAQ,GAC1D,KAAK,CAD6C,QAAQ;;QAAK,KAAK,4BACpE,KAAK;;;AAET,QAAI,SAAS,GAAG,SAAS,CAAC;AAC1B,SAAK,CAAC,SAAS,GAAG,6BAAW,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;;AAEjE,WACI;AAAC,iBAAS;QAAK,KAAK;QACf,QAAQ;KACD,CACd;CACL,CAAC;;AAEF,MAAM,CAAC,SAAS;;;;AAKZ,WAAO,EAAE,mBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;;;;AAI3D,WAAO,EAAE,mBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;;;;AAIjD,QAAI,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CAC5B,mBAAM,SAAS,CAAC,KAAK,CAAC,CAClB,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,CAC/D,CAAC,EACF,mBAAM,SAAS,CAAC,OAAO,CAAC,mBAAM,SAAS,CAAC,KAAK,CAAC,CAC1C,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,CAC/D,CAAC,CAAC,CACN,CAAC;;;;AAIF,SAAK,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAI7B,SAAK,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAI7B,eAAW,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAInC,eAAW,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAInC,iBAAa,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAIrC,oBAAgB,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAIxC,mBAAe,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;AAIvC,YAAQ,EAAE,mBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAC/D,CAAC;;AAEF,MAAM,CAAC,YAAY,gDAElB,CAAC;;AAEF,QACS,MAAM,GADf,MAAM,GAAG,yBAAO,MAAM,CAAC,CAAC;QACf,MAAM,GAAN,MAAM","file":"column.js","sourcesContent":["import React from 'react';\r\nimport { Numbers, validateClassProps } from '../../utilities';\r\nimport { defaultPropTypes, defaultPropValues } from '../../defaultProps';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\nconst validProps = {\r\n    aligned: ['right', 'left', 'justified', 'center'],\r\n    floated: ['right', 'left'],\r\n    valigned: ['top', 'middle', 'bottom']\r\n\r\n};\r\n\r\nfunction getClasses(props) {\r\n    let classes = {\r\n        column: props.defaultClasses\r\n    };\r\n    \r\n    classes[props.color] = !!props.color;\r\n    \r\n    // Widths\r\n    if (props.width && props.width > 0 && props.width <= 16) {\r\n        classes[`${Numbers[props.width]} wide`] = true;\r\n    }\r\n    \r\n    if (props.mobileWidth && props.mobileWidth > 0 && props.mobileWidth <= 16) {\r\n        classes[`${Numbers[props.mobileWidth]} wide mobile`] = true;\r\n    }\r\n    \r\n    if (props.tabletWidth && props.tabletWidth > 0 && props.tabletWidth <= 16) {\r\n        classes[`${Numbers[props.tabletWidth]} wide tablet`] = true;\r\n    }\r\n    \r\n    if (props.computerWidth && props.computerWidth > 0 && props.computerWidth <= 16) {\r\n        classes[`${Numbers[props.computerWidth]} wide computer`] = true;\r\n    }\r\n    \r\n    if (props.largeScreenWidth && props.largeScreenWidth > 0 && props.largeScreenWidth <= 16) {\r\n        classes[`${Numbers[props.largeScreenWidth]} wide large screen`] = true;\r\n    }\r\n    \r\n    if (props.wideScreenWidth && props.wideScreenWidth > 0 && props.wideScreenWidth <= 16) {\r\n        classes[`${Numbers[props.wideScreenWidth]} wide widescreen`] = true;\r\n    }\r\n    \r\n    if (props.only) {\r\n        let device;\r\n        if (Array.isArray(props.only)) {\r\n            device = props.only.join(' ');\r\n        } else {\r\n            device = props.only;\r\n        }\r\n        if (device) {\r\n            classes[`${device} only`] = true;\r\n        }\r\n    }\r\n    \r\n    return validateClassProps(classes, props, validProps, { valigned: 'aligned' });\r\n}\r\n\r\n/**\r\n * Grid column\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nlet Column = (props) => {\r\n    /* eslint-disable no-use-before-define */\r\n    let {\r\n        aligned, component, children, defaultClasses, floated, only, width, mobileWidth, tabletWidth,\r\n        computerWidth, largeScreenWidth, wideScreenWidth, valigned, ...other\r\n    } = props;\r\n    /* eslint-enable no-use-before-define */\r\n    let Component = component;\r\n    other.className = classNames(other.className, getClasses(props));\r\n    \r\n    return (\r\n        <Component {...other}>\r\n            {children}\r\n        </Component>\r\n    );\r\n};\r\n\r\nColumn.propTypes = {\r\n    ...defaultPropTypes,\r\n    /**\r\n     * Horizontal content alignment\r\n     */\r\n    aligned: React.PropTypes.oneOf(['right', 'left', 'center']),\r\n    /**\r\n     * Float to the right or left edge of the row\r\n     */\r\n    floated: React.PropTypes.oneOf(['right', 'left']),\r\n    /**\r\n     * Only visible for types. Could be single type string or array, i.e. only={[\"mobile\",\"tablet\"]}\r\n     */\r\n    only: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf([\r\n            'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\r\n        ]),\r\n        React.PropTypes.arrayOf(React.PropTypes.oneOf([\r\n            'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\r\n        ]))\r\n    ]),\r\n    /**\r\n     * Column color\r\n     */\r\n    color: React.PropTypes.string,\r\n    /**\r\n     * Column width for all device types\r\n     */\r\n    width: React.PropTypes.number,\r\n    /**\r\n     * Column width for mobile\r\n     */\r\n    mobileWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for tablet\r\n     */\r\n    tabletWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for computer\r\n     */\r\n    computerWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for large screens\r\n     */\r\n    largeScreenWidth: React.PropTypes.number,\r\n    /**\r\n     * Column width for wide screens\r\n     */\r\n    wideScreenWidth: React.PropTypes.number,\r\n    /**\r\n     * Vertical content alignment\r\n     */\r\n    valigned: React.PropTypes.oneOf(['top', 'middle', 'bottom'])\r\n};\r\n\r\nColumn.defaultProps = {\r\n    ...defaultPropValues\r\n};\r\n\r\nColumn = Radium(Column);\r\nexport { Column };\r\n"]}