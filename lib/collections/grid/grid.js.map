{"version":3,"sources":["../../../src/components/collections/grid/grid.jsx"],"names":[],"mappings":"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","file":"grid.js","sourcesContent":["import React from 'react';\r\nimport { Numbers, validateClassProps } from '../../utilities';\r\nimport DefaultProps from '../../defaultProps';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\nconst validProps = {\r\n    aligned: ['right', 'left', 'center'],\r\n    celled: ['internally'],\r\n    divided: ['vertically', 'internally'],\r\n    padded: ['horizontally', 'vertically'],\r\n    relaxed: ['very'],\r\n    reversed: ['mobile', 'mobile vertically', 'tablet', 'tablet vertically', 'computer', 'computer vertically'],\r\n    valigned: ['top', 'middle', 'bottom']\r\n};\r\n\r\nfunction getClassNames(props) {\r\n    let classes = {\r\n        // Default\r\n        ui: props.defaultClasses,\r\n        grid: props.defaultClasses,\r\n        \r\n        // variations\r\n        container: props.container,\r\n        relaxed: props.relaxed,\r\n        centered: props.centered,\r\n        stackable: props.stackable,\r\n        doubling: props.doubling\r\n    };\r\n\r\n    if (props.columns && props.columns > 0 && props.columns <= 16) {\r\n        classes[`${Numbers[props.columns]} column`] = true;\r\n    }\r\n    \r\n    if (props.equal) {\r\n        classes['equal width'] = true;\r\n    }\r\n    \r\n    return validateClassProps(classes, props, validProps, { valigned: 'aligned' });\r\n}\r\n\r\n/**\r\n * Semantic Grid\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nlet Grid = (props) => {\r\n    // consume props\r\n    /* eslint-disable no-use-before-define */\r\n    let {\r\n        aligned, defaultClasses, centered, celled, columns, container, component, children,\r\n        divided, doubling, equal, padded, relaxed, reversed, stackable, valigned,\r\n        ...other\r\n    } = props;\r\n    /* eslint-enable no-use-before-define */\r\n    const Component = component;\r\n    other.className = classNames(other.className, getClassNames(props));\r\n    return (\r\n        <Component \r\n            {...other} \r\n        >\r\n            {children}\r\n        </Component>\r\n    );\r\n};\r\n\r\nGrid.propTypes = {\r\n    ...DefaultProps.propTypes,\r\n    /**\r\n     * Horizontal content alignment\r\n     */\r\n    aligned: React.PropTypes.oneOf(['right', 'left', 'center']),\r\n    /**\r\n     * Center columns\r\n     */\r\n    centered: React.PropTypes.bool,\r\n    /**\r\n     * Divide rows into cells\r\n     */\r\n    celled: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['internally']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Grid column count\r\n     */\r\n    columns: React.PropTypes.number,\r\n    /**\r\n     * Add container class, i.e. ui grid container\r\n     */\r\n    container: React.PropTypes.bool,\r\n    /**\r\n     * Add dividers between ros\r\n     */\r\n    divided: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['vertically', 'internally']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Double column width on tablet and mobile sizes\r\n     */\r\n    doubling: React.PropTypes.bool,\r\n    /**\r\n     * Automatically resize elements to split the available width evently\r\n     */\r\n    equal: React.PropTypes.bool,\r\n    /**\r\n     * Preserve gutters on first and las columns\r\n     */\r\n    padded: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['horizontally', 'vertically']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Increase size of gutters\r\n     */\r\n    relaxed: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['very']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Reverse the order of columns or rows by device\r\n     */\r\n    reversed: React.PropTypes.oneOfType([\r\n        'mobile', 'mobile vertically', 'tablet', 'tablet vertically', 'computer', 'computer vertically'\r\n    ]),\r\n    /**\r\n     * Automatically stack rows into single columns on mobile devices\r\n     */\r\n    stackable: React.PropTypes.bool,\r\n    /**\r\n     * Vertical content alignment\r\n     */\r\n    valigned: React.PropTypes.oneOf(['top', 'middle', 'bottom'])\r\n};\r\n\r\nGrid.defaultProps = {\r\n    ...DefaultProps.defaultProps\r\n};\r\n\r\nGrid = Radium(Grid);\r\nexport default Grid;\r\n"]}