{"version":3,"sources":["../../../src/components/collections/grid/grid.jsx"],"names":[],"mappings":"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","file":"grid.js","sourcesContent":["import React from 'react';\r\nimport { Numbers, validateClassProps } from '../../utilities';\r\nimport { defaultPropTypes, defaultPropValues } from '../../defaultProps';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\nconst validProps = {\r\n    aligned: ['right', 'left', 'center'],\r\n    celled: ['internally'],\r\n    divided: ['vertically', 'internally'],\r\n    padded: ['horizontally', 'vertically'],\r\n    relaxed: ['very'],\r\n    reversed: ['mobile', 'mobile vertically', 'tablet', 'tablet vertically', 'computer', 'computer vertically'],\r\n    valigned: ['top', 'middle', 'bottom']\r\n};\r\n\r\nfunction getClassNames(props) {\r\n    let classes = {\r\n        // Default\r\n        ui: props.defaultClasses,\r\n        grid: props.defaultClasses,\r\n        \r\n        // variations\r\n        container: props.container,\r\n        relaxed: props.relaxed,\r\n        centered: props.centered,\r\n        stackable: props.stackable,\r\n        doubling: props.doubling\r\n    };\r\n\r\n    if (props.columns && props.columns > 0 && props.columns <= 16) {\r\n        classes[`${Numbers[props.columns]} column`] = true;\r\n    }\r\n    \r\n    if (props.equal) {\r\n        classes['equal width'] = true;\r\n    }\r\n    \r\n    return validateClassProps(classes, props, validProps, { valigned: 'aligned' });\r\n}\r\n\r\n/**\r\n * Semantic Grid\r\n * @param props\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nlet Grid = (props) => {\r\n    // consume props\r\n    /* eslint-disable no-use-before-define */\r\n    let {\r\n        aligned, defaultClasses, centered, celled, columns, container, component, children,\r\n        divided, doubling, equal, padded, relaxed, reversed, stackable, valigned,\r\n        ...other\r\n    } = props;\r\n    /* eslint-enable no-use-before-define */\r\n    const Component = component;\r\n    other.className = classNames(other.className, getClassNames(props));\r\n    return (\r\n        <Component \r\n            {...other} \r\n        >\r\n            {children}\r\n        </Component>\r\n    );\r\n};\r\n\r\nGrid.propTypes = {\r\n    ...defaultPropTypes,\r\n    /**\r\n     * Horizontal content alignment\r\n     */\r\n    aligned: React.PropTypes.oneOf(['right', 'left', 'center']),\r\n    /**\r\n     * Center columns\r\n     */\r\n    centered: React.PropTypes.bool,\r\n    /**\r\n     * Divide rows into cells\r\n     */\r\n    celled: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['internally']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Grid column count\r\n     */\r\n    columns: React.PropTypes.number,\r\n    /**\r\n     * Add container class, i.e. ui grid container\r\n     */\r\n    container: React.PropTypes.bool,\r\n    /**\r\n     * Add dividers between ros\r\n     */\r\n    divided: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['vertically', 'internally']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Double column width on tablet and mobile sizes\r\n     */\r\n    doubling: React.PropTypes.bool,\r\n    /**\r\n     * Automatically resize elements to split the available width evently\r\n     */\r\n    equal: React.PropTypes.bool,\r\n    /**\r\n     * Preserve gutters on first and las columns\r\n     */\r\n    padded: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['horizontally', 'vertically']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Increase size of gutters\r\n     */\r\n    relaxed: React.PropTypes.oneOfType([\r\n        React.PropTypes.oneOf(['very']),\r\n        React.PropTypes.bool\r\n    ]),\r\n    /**\r\n     * Reverse the order of columns or rows by device\r\n     */\r\n    reversed: React.PropTypes.oneOfType([\r\n        'mobile', 'mobile vertically', 'tablet', 'tablet vertically', 'computer', 'computer vertically'\r\n    ]),\r\n    /**\r\n     * Automatically stack rows into single columns on mobile devices\r\n     */\r\n    stackable: React.PropTypes.bool,\r\n    /**\r\n     * Vertical content alignment\r\n     */\r\n    valigned: React.PropTypes.oneOf(['top', 'middle', 'bottom'])\r\n};\r\n\r\nGrid.defaultProps = {\r\n    ...defaultPropValues\r\n};\r\n\r\nGrid = Radium(Grid);\r\nexport { Grid };\r\n"]}