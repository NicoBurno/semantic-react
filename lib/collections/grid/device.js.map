{"version":3,"sources":["../../../src/components/collections/grid/device.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;qBAAkB,OAAO;;;;yBACmB,iBAAiB;;sBAC1C,QAAQ;;;;AAE3B,IAAI,UAAU,GAAG;AACb,YAAQ,EAAE,CAAC,YAAY,CAAC;CAC3B,CAAA;;IAGY,MAAM;cAAN,MAAM;;aAAN,MAAM;;;;;;iBAAN,MAAM;;eAgBJ,uBAAG;AACV,gBAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,gBAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AAClB,oBAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAK,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE;AACjD,2BAAO,CAAC,mBAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC;iBACvD;aACJ;;AAED,gBAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;AACjB,uBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC;aAC7C,MAAM;AACH,uBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;aACnC;;AAGD,mBAAO,GAAG,mCAAmB,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;;AAE9D,mBAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACxD;;;eAEK,kBAAG;AACL,gBAAI,CAAC,WAAW,EAAE,CAAC;AACnB,mBAAO,IAAI,CAAC;SACf;;;eAvCkB;AACf,oBAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC9B,oBAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC9B,gBAAI,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC1B,oBAAQ,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CAChC,mBAAM,SAAS,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CACxC,CAAC;AACF,gBAAI,EAAE,mBAAM,SAAS,CAAC,KAAK,CAAC,CACxB,QAAQ,EACR,UAAU,EACV,QAAQ,CACX,CAAC,CAAC,UAAU;AACb,iBAAK,EAAE,mBAAM,SAAS,CAAC,MAAM;SAChC;;;;kBAdQ,MAAM;AAAN,UAAM,4BAAN,MAAM,KAAN,MAAM;WAAN,MAAM;GAAS,mBAAM,SAAS","file":"device.js","sourcesContent":["import React from 'react';\r\nimport { Numbers, validateClassProps } from '../../utilities';\r\nimport Radium from 'radium';\r\n\r\nlet validProps = {\r\n    reversed: ['vertically']\r\n}\r\n\r\n@Radium\r\nexport class Device extends React.Component {\r\n    static propTypes = {\r\n        callback: React.PropTypes.func,\r\n        children: React.PropTypes.node,\r\n        only: React.PropTypes.bool,\r\n        reversed: React.PropTypes.oneOfType([\r\n            React.PropTypes.oneOf(['vertically'])\r\n        ]),\r\n        type: React.PropTypes.oneOf([\r\n            'mobile',\r\n            'computer',\r\n            'tablet'\r\n        ]).isRequired,\r\n        width: React.PropTypes.number\r\n    };\r\n\r\n    renderStyle() {\r\n        let classes = {};\r\n\r\n        if (this.props.width) {\r\n            if (this.props.width > 0  && this.props.width <= 16) {\r\n                classes[Numbers[this.props.width] + ' wide'] = true;\r\n            }\r\n        }\r\n\r\n        if (this.props.only) {\r\n            classes[this.props.type + ' only'] = true;\r\n        } else {\r\n            classes[this.props.type] = true;\r\n        }\r\n\r\n\r\n        classes = validateClassProps(classes, this.props, validProps);\r\n\r\n        return this.props.callback(classes, this.props.type);\r\n    }\r\n\r\n    render() {\r\n        this.renderStyle();\r\n        return null;\r\n    }\r\n\r\n}\r\n"]}