{"version":3,"sources":["../../../src/components/elements/button/iconbutton.jsx"],"names":[],"mappings":";;;;;;;;;;;;qBAAkB,OAAO;;;;wBACI,gBAAgB;;AAE7C,SAAS,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;AACvD,QAAI,iBAAiB,GAAG,EAAE,CAAC;;AAE3B,qBAAiB,CAAC,IAAI,CAClB;AACI,aAAK,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,AAAC;AACjC,WAAG,EAAC,MAAM;AACV,YAAI,EAAE,IAAI,AAAC,GAAG,CACrB,CAAC;;AAEF,uBAAM,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAA,KAAK,EAAI;AACtC,yBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjC,CAAC,CAAC;;AAEH,WAAO,iBAAiB,CAAC;CAC5B;;AAED,IAAI,UAAU,GAAG,SAAb,UAAU,CAAI,IAA+C,EAAK;QAAlD,QAAQ,GAAV,IAA+C,CAA7C,QAAQ;QAAE,SAAS,GAArB,IAA+C,CAAnC,SAAS;QAAE,IAAI,GAA3B,IAA+C,CAAxB,IAAI;QAAE,MAAM,GAAnC,IAA+C,CAAlB,MAAM;;QAAK,KAAK,4BAA7C,IAA+C;;AAE7D,WACI;;qBACQ,KAAK;AACT,gBAAI,EAAE,mBAAM,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,AAAC;AAC3C,kBAAM,EAAE,MAAM,GAAG,IAAI,GAAG,EAAE,AAAC;;QAE1B,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;KAC7C,CACX;CACL,CAAC;;AAEF,UAAU,CAAC,SAAS,GAAG;;;;AAInB,YAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;;;;;AAK9B,aAAS,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;;AAKjC,QAAI,EAAE,mBAAM,SAAS,CAAC,MAAM;;;;;AAK5B,UAAM,EAAE,mBAAM,SAAS,CAAC,IAAI;CAC/B,CAAC;;qBAEa,UAAU","file":"iconbutton.js","sourcesContent":["import React from 'react';\r\nimport { Icon, Button } from '../../elements';\r\n\r\nfunction renderChildren(children, name, social, iconColor) {\r\n    let componentChildren = [];\r\n\r\n    componentChildren.push(\r\n        <Icon\r\n            color={social ? null : iconColor}\r\n            key=\"icon\"\r\n            name={name} />\r\n    );\r\n\r\n    React.Children.forEach(children, child => {\r\n        componentChildren.push(child);\r\n    });\r\n\r\n    return componentChildren;\r\n}\r\n\r\nlet IconButton = ({ children, iconColor, name, social, ...other }) => {\r\n\r\n    return (\r\n        <Button\r\n            {...other}\r\n            icon={React.Children.count(children) === 0}\r\n            social={social ? name : ''}\r\n        >\r\n            {renderChildren(children, name, social, iconColor)}\r\n        </Button>\r\n    );\r\n};\r\n\r\nIconButton.propTypes = {\r\n    /**\r\n     * The child nodes of the component.\r\n     */\r\n    children: React.PropTypes.node,\r\n\r\n    /**\r\n     * Adds a SemanticUI color class to the icon.\r\n     */\r\n    iconColor: React.PropTypes.string,\r\n\r\n    /**\r\n     * Adds a SemanticUI name class to the icon.\r\n     */\r\n    name: React.PropTypes.string,\r\n\r\n    /**\r\n     * Renders as a social button if true (see SocialButton);\r\n     */\r\n    social: React.PropTypes.bool\r\n};\r\n\r\nexport default IconButton;\r\n"]}