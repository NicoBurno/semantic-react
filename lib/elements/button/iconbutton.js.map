{"version":3,"sources":["../../../src/components/elements/button/iconbutton.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAGA,SAAS,cAAT,CAAwB,QAAxB,EAAkC,IAAlC,EAAwC,MAAxC,EAAgD,SAAhD,EAA2D;AACvD,QAAI,oBAAoB,EAApB,CADmD;;AAGvD,sBAAkB,IAAlB,CACI;AACI,eAAO,SAAS,IAAT,GAAgB,SAAhB;AACP,aAAI,MAAJ;AACA,cAAM,IAAN,EAHJ,CADJ,EAHuD;;AAUvD,oBAAM,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,iBAAS;AACtC,0BAAkB,IAAlB,CAAuB,KAAvB,EADsC;KAAT,CAAjC,CAVuD;;AAcvD,WAAO,iBAAP,CAduD;CAA3D;;AAiBA,IAAI,aAAa,SAAb,UAAa,OAAqD;QAAlD,yBAAkD;QAAxC,2BAAwC;QAA7B,iBAA6B;QAAvB,qBAAuB;;QAAZ,oFAAY;;AAElE,WACI;;qBACQ;AACJ,kBAAM,gBAAM,QAAN,CAAe,KAAf,CAAqB,QAArB,MAAmC,CAAnC;AACN,oBAAQ,SAAS,IAAT,GAAgB,EAAhB;UAHZ;QAKK,eAAe,QAAf,EAAyB,IAAzB,EAA+B,MAA/B,EAAuC,SAAvC,CALL;KADJ,CAFkE;CAArD;;AAajB,WAAW,SAAX,GAAuB;;;;AAInB,cAAU,gBAAM,SAAN,CAAgB,IAAhB;;;;;AAKV,eAAW,gBAAM,SAAN,CAAgB,MAAhB;;;;;AAKX,UAAM,gBAAM,SAAN,CAAgB,MAAhB;;;;;AAKN,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;CAnBZ;;kBAsBe","file":"iconbutton.js","sourcesContent":["import React from 'react';\r\nimport { Icon, Button } from '../../elements';\r\n\r\nfunction renderChildren(children, name, social, iconColor) {\r\n    let componentChildren = [];\r\n\r\n    componentChildren.push(\r\n        <Icon\r\n            color={social ? null : iconColor}\r\n            key=\"icon\"\r\n            name={name} />\r\n    );\r\n\r\n    React.Children.forEach(children, child => {\r\n        componentChildren.push(child);\r\n    });\r\n\r\n    return componentChildren;\r\n}\r\n\r\nlet IconButton = ({ children, iconColor, name, social, ...other }) => {\r\n\r\n    return (\r\n        <Button\r\n            {...other}\r\n            icon={React.Children.count(children) === 0}\r\n            social={social ? name : ''}\r\n        >\r\n            {renderChildren(children, name, social, iconColor)}\r\n        </Button>\r\n    );\r\n};\r\n\r\nIconButton.propTypes = {\r\n    /**\r\n     * The child nodes of the component.\r\n     */\r\n    children: React.PropTypes.node,\r\n\r\n    /**\r\n     * Adds a SemanticUI color class to the icon.\r\n     */\r\n    iconColor: React.PropTypes.string,\r\n\r\n    /**\r\n     * Adds a SemanticUI name class to the icon.\r\n     */\r\n    name: React.PropTypes.string,\r\n\r\n    /**\r\n     * Renders as a social button if true (see SocialButton);\r\n     */\r\n    social: React.PropTypes.bool\r\n};\r\n\r\nexport default IconButton;\r\n"]}