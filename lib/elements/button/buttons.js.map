{"version":3,"sources":["../../../src/components/elements/button/buttons.jsx"],"names":[],"mappings":"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","file":"buttons.js","sourcesContent":["import React from 'react';\r\nimport { LabeledButton, IconButton } from '../../elements';\r\nimport { Numbers, validateClassProps, isEveryChild } from '../../utilities';\r\nimport classNames from 'classnames';\r\n\r\nlet validProps = {\r\n    attached: ['bottom', 'top'],\r\n    floated: ['right', 'left']\r\n};\r\n\r\nexport default class Buttons extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * It's attached to some other attachable component.\r\n         */\r\n        attached: React.PropTypes.oneOf(['bottom', 'top']),\r\n\r\n        /**\r\n         * Adds simple styling to the component.\r\n         */\r\n        basic: React.PropTypes.bool,\r\n\r\n        /**\r\n         * The child nodes of the component.\r\n         */\r\n        children: React.PropTypes.node,\r\n\r\n        /**\r\n         * Adds additional classes to the component.\r\n         */\r\n        className: React.PropTypes.node,\r\n\r\n        /**\r\n         * Adds a SemanticUI color class.\r\n         */\r\n        color: React.PropTypes.string,\r\n\r\n        /**\r\n         * Reduces the padding on the component.\r\n         */\r\n        compact: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Overrides the component with a custom component string ('div') or\r\n         * ReactElement.\r\n         */\r\n        component: React.PropTypes.oneOfType([\r\n            React.PropTypes.element,\r\n            React.PropTypes.string\r\n        ]),\r\n\r\n        /**\r\n         * Adds the default classes for the component.\r\n         */\r\n        defaultClasses: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Forces all children to an equal width.\r\n         */\r\n        equal: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Forces to component to float left or right.\r\n         */\r\n        floated: React.PropTypes.oneOf(['right', 'left']),\r\n\r\n        /**\r\n         * Overrides default behavior and adds the icon class to the component.\r\n         */\r\n        icon: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Styles the component for a dark background.\r\n         */\r\n        inverted: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Overrides default behavior and adds the labeled class to the\r\n         * component.\r\n         */\r\n        labeled: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Adds a SemanticUI size class.\r\n         */\r\n        size: React.PropTypes.string,\r\n\r\n        /**\r\n         * Forces child components to render vertically.\r\n         */\r\n        vertical: React.PropTypes.bool\r\n    };\r\n\r\n    static childContextTypes = {\r\n        isAttached: React.PropTypes.bool,\r\n        isIconButtons: React.PropTypes.bool,\r\n        isLabeledButtons: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        component: 'div',\r\n        defaultClasses: true\r\n    };\r\n\r\n    getChildContext() {\r\n        return {\r\n            isAttached: !!this.props.attached,\r\n            isIconButtons: !!this.props.icon,\r\n            isLabeledButtons: !!this.props.labeled\r\n        };\r\n    }\r\n\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let { attached, basic, children, className, color, compact, component,\r\n              defaultClasses, equal, floated, icon, inverted, labeled, size,\r\n              vertical, ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        other.className = classNames(this.props.className, this.getClasses());\r\n\r\n        return React.createElement(\r\n            this.props.component,\r\n            other,\r\n            this.props.children\r\n        );\r\n    }\r\n\r\n    getClasses() {\r\n        let classes = {\r\n            // default\r\n            ui: this.props.defaultClasses,\r\n\r\n            // types\r\n            basic: this.props.basic,\r\n            icon: this.props.icon || isEveryChild(this.props.children, IconButton),\r\n            inverted: this.props.inverted,\r\n            labeled: this.props.labeled || isEveryChild(this.props.children, LabeledButton),\r\n\r\n            // variations\r\n            attached: this.props.attached,\r\n            compact: this.props.compact,\r\n            vertical: this.props.vertical,\r\n\r\n            // component\r\n            buttons: this.props.defaultClasses\r\n        };\r\n\r\n        let childCount = React.Children.count(this.props.children);\r\n\r\n        // buttons group with >0 buttons that are all of equal width\r\n        if (this.props.equal) {\r\n            if (childCount > 1  && childCount <= 12) {\r\n                classes[Numbers[childCount]] = true;\r\n            } else {\r\n                classes['fluid'] = true;\r\n            }\r\n        }\r\n\r\n        classes[this.props.color] = !!this.props.color;\r\n        classes[this.props.size] = !!this.props.size;\r\n\r\n        return validateClassProps(classes, this.props, validProps);\r\n    }\r\n}\r\n"]}