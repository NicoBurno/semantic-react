{"version":3,"sources":["../../../src/components/elements/button/buttons.jsx"],"names":[],"mappings":"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","file":"buttons.js","sourcesContent":["import React from 'react';\r\nimport { LabeledButton, IconButton } from '../../elements';\r\nimport { Numbers, validateClassProps, isEveryChild } from '../../utilities';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\nlet validProps = {\r\n    attached: ['bottom', 'top'],\r\n    floated: ['right', 'left']\r\n};\r\n\r\n@Radium\r\nexport default class Buttons extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * It's attached to some other attachable component.\r\n         */\r\n        attached: React.PropTypes.oneOf(['bottom', 'top']),\r\n\r\n        /**\r\n         * Adds simple styling to the component.\r\n         */\r\n        basic: React.PropTypes.bool,\r\n\r\n        /**\r\n         * The child nodes of the component.\r\n         */\r\n        children: React.PropTypes.node,\r\n\r\n        /**\r\n         * Adds additional classes to the component.\r\n         */\r\n        className: React.PropTypes.node,\r\n\r\n        /**\r\n         * Adds a SemanticUI color class.\r\n         */\r\n        color: React.PropTypes.string,\r\n\r\n        /**\r\n         * Reduces the padding on the component.\r\n         */\r\n        compact: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Overrides the component with a custom component string ('div') or\r\n         * ReactElement.\r\n         */\r\n        component: React.PropTypes.oneOfType([\r\n            React.PropTypes.element,\r\n            React.PropTypes.string\r\n        ]),\r\n\r\n        /**\r\n         * Adds the default classes for the component.\r\n         */\r\n        defaultClasses: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Forces all children to an equal width.\r\n         */\r\n        equal: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Forces to component to float left or right.\r\n         */\r\n        floated: React.PropTypes.oneOf(['right', 'left']),\r\n\r\n        /**\r\n         * Overrides default behavior and adds the icon class to the component.\r\n         */\r\n        icon: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Styles the component for a dark background.\r\n         */\r\n        inverted: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Overrides default behavior and adds the labeled class to the\r\n         * component.\r\n         */\r\n        labeled: React.PropTypes.bool,\r\n\r\n        /**\r\n         * Adds a SemanticUI size class.\r\n         */\r\n        size: React.PropTypes.string,\r\n\r\n        /**\r\n         * Forces child components to render vertically.\r\n         */\r\n        vertical: React.PropTypes.bool\r\n    };\r\n\r\n    static childContextTypes = {\r\n        isAttached: React.PropTypes.bool,\r\n        isIconButtons: React.PropTypes.bool,\r\n        isLabeledButtons: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        component: 'div',\r\n        defaultClasses: true\r\n    };\r\n\r\n    getChildContext() {\r\n        return {\r\n            isAttached: !!this.props.attached,\r\n            isIconButtons: !!this.props.icon,\r\n            isLabeledButtons: !!this.props.labeled\r\n        };\r\n    }\r\n\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let { attached, basic, children, className, color, compact, component,\r\n              defaultClasses, equal, floated, icon, inverted, labeled, size,\r\n              vertical, ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        other.className = classNames(this.props.className, this.getClasses());\r\n\r\n        return React.createElement(\r\n            this.props.component,\r\n            other,\r\n            this.props.children\r\n        );\r\n    }\r\n\r\n    getClasses() {\r\n        let classes = {\r\n            // default\r\n            ui: this.props.defaultClasses,\r\n\r\n            // types\r\n            basic: this.props.basic,\r\n            icon: this.props.icon || isEveryChild(this.props.children, IconButton),\r\n            inverted: this.props.inverted,\r\n            labeled: this.props.labeled || isEveryChild(this.props.children, LabeledButton),\r\n\r\n            // variations\r\n            attached: this.props.attached,\r\n            compact: this.props.compact,\r\n            vertical: this.props.vertical,\r\n\r\n            // component\r\n            buttons: this.props.defaultClasses\r\n        };\r\n\r\n        let childCount = React.Children.count(this.props.children);\r\n\r\n        // buttons group with >0 buttons that are all of equal width\r\n        if (this.props.equal) {\r\n            if (childCount > 1  && childCount <= 12) {\r\n                classes[Numbers[childCount]] = true;\r\n            } else {\r\n                classes['fluid'] = true;\r\n            }\r\n        }\r\n\r\n        classes[this.props.color] = !!this.props.color;\r\n        classes[this.props.size] = !!this.props.size;\r\n\r\n        return validateClassProps(classes, this.props, validProps);\r\n    }\r\n}\r\n"]}