{"version":3,"sources":["../../../src/components/elements/button/labeledbutton.jsx"],"names":[],"mappings":"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","file":"labeledbutton.js","sourcesContent":["import React from 'react';\r\nimport { Icon, Label, Button } from '../../elements';\r\nimport { hasChild, hasFirstChild, spliceChildren } from '../../utilities';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\n@Radium\r\nexport default class LabeledButton extends React.Component {\r\n    static propTypes = {\r\n        active: React.PropTypes.bool,\r\n        basic: React.PropTypes.bool,\r\n        children: React.PropTypes.node,\r\n        circular: React.PropTypes.bool,\r\n        className: React.PropTypes.node,\r\n        color: React.PropTypes.string,\r\n        compact: React.PropTypes.bool,\r\n        component: React.PropTypes.oneOfType([\r\n            React.PropTypes.element,\r\n            React.PropTypes.string\r\n        ]),\r\n        defaultClasses: React.PropTypes.bool,\r\n        disabled: React.PropTypes.bool,\r\n        fluid: React.PropTypes.bool,\r\n        icon: React.PropTypes.bool,\r\n        inverted: React.PropTypes.bool,\r\n        labeled: React.PropTypes.oneOfType([\r\n            React.PropTypes.string,\r\n            React.PropTypes.bool\r\n        ]),\r\n        loading: React.PropTypes.bool,\r\n        negative: React.PropTypes.bool,\r\n        positive: React.PropTypes.bool,\r\n        primary: React.PropTypes.bool,\r\n        secondary: React.PropTypes.bool,\r\n        size: React.PropTypes.string,\r\n        social: React.PropTypes.string\r\n    };\r\n\r\n    static contextTypes = {\r\n        isAttached: React.PropTypes.bool,\r\n        hasIconClass: React.PropTypes.bool\r\n    };\r\n\r\n\r\n    static defaultProps = {\r\n        defaultClasses: true\r\n    };\r\n\r\n    /*\r\n     *  Handles buttons with an image for a label\r\n     */\r\n    renderButton() {\r\n        /* eslint-disable no-use-before-define */\r\n        let { ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n        other.icon = true;\r\n        other.labeled = this.props.labeled || true;\r\n\r\n        return <Button {...other}>{this.props.children}</Button>;\r\n    }\r\n\r\n    /*\r\n     *  Wraps any non-label component(s) in a div with\r\n     */\r\n    renderChildren() {\r\n        let children = [];\r\n\r\n        // split children into Label and not Label arrays\r\n        let components = spliceChildren(this.props.children, Label);\r\n\r\n        // labeled is consumed by the parent button\r\n        /* eslint-disable no-use-before-define */\r\n        let { labeled, ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        other.className = classNames(this.props.className, this.getClasses());\r\n\r\n        let icon = (\r\n            <div\r\n                {...other}\r\n                key=\"icon\"\r\n            >\r\n                {components.remaining}\r\n            </div>\r\n        );\r\n\r\n        // if Label was spliced at index 0, put it first\r\n        if (components.index == 0) {\r\n            children.push(components.component);\r\n            children.push(icon);\r\n        // otherwise last\r\n        } else {\r\n            children.push(icon);\r\n            children.push(components.component);\r\n        }\r\n\r\n        return children;\r\n    }\r\n\r\n    render() {\r\n        // this must be an icon label\r\n        if (!hasChild(this.props.children, Label)) {\r\n            return this.renderButton();\r\n        }\r\n\r\n        // most button props are consumed by the child\r\n        /* eslint-disable no-use-before-define */\r\n        let { active, basic, color, circular, compact, fluid,  inverted,\r\n              size, ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        other.className = classNames(other.className);\r\n\r\n        // if the label was the first child, its direction must be left\r\n        if (hasFirstChild(this.props.children, Label)) {\r\n            other.labeled = 'left';\r\n\r\n        // labels are on the right by default\r\n        } else {\r\n            other.labeled = true;\r\n        }\r\n\r\n        return <Button {...other}>{this.renderChildren()}</Button>\r\n    }\r\n\r\n    getClasses() {\r\n        let classes = {\r\n            // default\r\n            ui: this.props.defaultClasses,\r\n\r\n            // position based props\r\n            labeled: this.props.labeled,\r\n\r\n            // types\r\n            animated: false,\r\n            basic: this.props.basic,\r\n            icon: hasChild(this.props.children, Icon) && React.Children.count(this.props.children) === 2,\r\n            inverted: this.props.inverted,\r\n\r\n            // states\r\n            active: this.props.active,\r\n            loading: this.props.loading,\r\n\r\n            // variations\r\n            circular: this.props.circular,\r\n            compact: this.props.compact,\r\n            fluid: false,\r\n\r\n            // component\r\n            button: this.props.defaultClasses\r\n        };\r\n\r\n        // string types\r\n        classes[this.props.color] = !!this.props.color;\r\n        classes[this.props.size] = !!this.props.size;\r\n        classes[this.props.social] = !!this.props.social;\r\n\r\n        return classes;\r\n    }\r\n}\r\n"]}