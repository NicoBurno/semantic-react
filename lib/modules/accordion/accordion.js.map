{"version":3,"sources":["../../../src/components/modules/accordion/accordion.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;qBAAiC,OAAO;;;;uBACM,eAAe;;0BACtC,YAAY;;;;sBAChB,QAAQ;;;;IAGd,SAAS;cAAT,SAAS;;iBAAT,SAAS;;eACC;AACf,oBAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC9B,qBAAS,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC/B,0BAAc,EAAE,mBAAM,SAAS,CAAC,IAAI;AACpC,iBAAK,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC3B,oBAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC9B,kBAAM,EAAE,mBAAM,SAAS,CAAC,IAAI;SAC/B;;;;eAEqB;AAClB,0BAAc,EAAE,IAAI;SACvB;;;;AAEU,aAdF,SAAS,CAcN,KAAK,EAAE;;;AACf,0FAAM,KAAK,EAAE;;AAEb,YAAI,CAAC,KAAK,GAAG;AACT,yBAAa,EAAE,IAAI;SACtB,CAAA;KACJ;;iBApBQ,SAAS;;eAuBJ,0BAAG;AACb,gBAAI,KAAK,GAAG,CAAC,CAAC;AACd,gBAAI,OAAO,GAAG,IAAI,CAAC;;AAEnB,mBAAO,mBAAM,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA,UAAS,KAAK,EAAE;AAC3D,oBAAI,KAAK,CAAC,IAAI,2BAAkB,EAAE;AAC9B,wBAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;AAEvD,2BAAO,GAAG,mBAAM,YAAY,CAAC,KAAK,EAAE;AAChC,8BAAM,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,KAAK;AAC1C,+BAAO,EAAE,UAAU;qBACtB,CAAC,CAAC;iBACN,MAAM,IAAI,KAAK,CAAC,IAAI,0BAAiB,EAAE;AACpC,2BAAO,GAAG,mBAAM,YAAY,CAAC,KAAK,EAAE;AAChC,8BAAM,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,KAAK;AAC1C,6BAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;qBAC1B,CAAC,CAAC;AACH,yBAAK,EAAE,CAAC;iBACX,MAAM;AACH,2BAAO,KAAK,CAAC;iBAChB;;AAED,uBAAO,OAAO,CAAC;aAClB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACjB;;;eAEK,kBAAG;AACL,gBAAI,OAAO,GAAG;;AAEV,kBAAE,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;;;;;AAK7B,sBAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;;;AAGzB,qBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;AACvB,wBAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;;;AAG7B,yBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;aACvC,CAAC;;AAGF,mBACI;;kBAAK,SAAS,EAAE,6BAAW,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,AAAC;gBACrD,IAAI,CAAC,cAAc,EAAE;aACpB,CACT;SACJ;;;eAEW,sBAAC,GAAG,EAAE;AACd,gBAAI,MAAM,YAAA,CAAC;;AAEX,gBAAI,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;AAClC,sBAAM,GAAG,GAAG,CAAC;aAChB;;AAED,gBAAI,CAAC,QAAQ,CAAC;AACV,6BAAa,EAAE,MAAM;aACxB,CAAC,CAAA;SACL;;;qBArFQ,SAAS;AAAT,aAAS,4BAAT,SAAS,KAAT,SAAS;WAAT,SAAS","file":"accordion.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { AccordionTitle, AccordionBody } from '../../modules'\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\n@Radium\r\nexport class Accordion extends Component {\r\n    static propTypes = {\r\n        children: React.PropTypes.node,\r\n        className: React.PropTypes.node,\r\n        defaultClasses: React.PropTypes.bool,\r\n        fluid: React.PropTypes.bool,\r\n        inverted: React.PropTypes.bool,\r\n        styled: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        defaultClasses: true\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentActive: null\r\n        }\r\n    }\r\n\r\n\r\n    renderChildren() {\r\n        let index = 0;\r\n        let element = null;\r\n\r\n        return React.Children.map(this.props.children, function(child) {\r\n            if (child.type == AccordionTitle) {\r\n                const boundClick = this._handleClick.bind(this, index);\r\n\r\n                element = React.cloneElement(child, {\r\n                    active: this.state.currentActive === index,\r\n                    onClick: boundClick\r\n                });\r\n            } else if (child.type == AccordionBody) {\r\n                element = React.cloneElement(child, {\r\n                    active: this.state.currentActive === index,\r\n                    event: this.state.event\r\n                });\r\n                index++;\r\n            } else {\r\n                return child;\r\n            }\r\n\r\n            return element;\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n        let classes = {\r\n            // default\r\n            ui: this.props.defaultClasses,\r\n\r\n            // positioning\r\n\r\n            // types\r\n            styled: this.props.styled,\r\n\r\n            // variations\r\n            fluid: this.props.fluid,\r\n            inverted: this.props.inverted,\r\n\r\n            // component\r\n            accordion: this.props.defaultClasses\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={classNames(this.props.className, classes)}>\r\n                {this.renderChildren()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    _handleClick(key) {\r\n        let active;\r\n\r\n        if (key !== this.state.currentActive) {\r\n            active = key;\r\n        }\r\n\r\n        this.setState({\r\n            currentActive: active\r\n        })\r\n    }\r\n}"]}