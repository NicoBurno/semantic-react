{"version":3,"sources":["../../../src/components/modules/accordion/accordionbody.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;qBAAiC,OAAO;;;;uBAChB,eAAe;;0BAChB,YAAY;;;;;;IAItB,aAAa;cAAb,aAAa;;iBAAb,aAAa;;eACH;AACf,kBAAM,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC5B,oBAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC9B,0BAAc,EAAE,mBAAM,SAAS,CAAC,IAAI;SACvC;;;;eAEqB;AAClB,0BAAc,EAAE,IAAI;SACvB;;;;AAEU,aAXF,aAAa,CAWV,KAAK,EAAE;8BAXV,aAAa;;AAYlB,mCAZK,aAAa,6CAYZ,KAAK,EAAE;KAChB;;iBAbQ,aAAa;;eAehB,kBAAG;AACL,gBAAI,OAAO,GAAG;;AAEV,kBAAE,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;;;;;;;;;;;AAW7B,uBAAO,EAAE,IAAI;AACb,sBAAM,EAAE,IAAI;aACf,CAAC;;;;;;;;;;;;AAaF,gBAAI,SAAS,GAAG;AACZ,qBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;AACxB,0BAAU,EAAE;AACR,wBAAI,EAAE,WAAW;AACjB,wBAAI,EAAE,WAAW;AACjB,4BAAQ,EAAE,GAAG;AACb,2BAAO,EAAE;AACL,8BAAM,EAAE,WAAW;qBACtB;iBACJ;AACD,yBAAS,EAAE;AACP,wBAAI,EAAE,SAAS;AACf,4BAAQ,EAAE,GAAG;AACb,2BAAO,EAAE;AACL,8BAAM,EAAE,WAAW;qBACtB;iBACJ;aACJ,CAAC;;AAEF,gBAAI,cAAc,GAAG;AACjB,qBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;AACxB,0BAAU,EAAE;AACR,wBAAI,EAAE,QAAQ;AACd,4BAAQ,EAAE,GAAG;AACb,2BAAO,EAAE;AACL,8BAAM,EAAE,UAAU;qBACrB;iBACJ;AACD,yBAAS,EAAE;AACP,wBAAI,EAAE,SAAS;AACf,4BAAQ,EAAE,GAAG;AACb,2BAAO,EAAE;AACL,8BAAM,EAAE,WAAW;qBACtB;iBACJ;aACJ,CAAA;;;AAID,mBACQ;;;AACI,6BAAS,EAAE,SAAS,AAAC;AACrB,6BAAS,EAAE,6BAAW,OAAO,CAAC,AAAC;AAC/B,uBAAG,EAAC,SAAS;;gBAEb;;sBAAS,SAAS,EAAE,cAAc,AAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ;iBACd;aACJ,CAChB;SACL;;;WA9FQ,aAAa","file":"accordionbody.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Animate } from '../../modules';\r\nimport classNames from 'classnames';\r\n\r\n// TODO: image and horizontal list examples\r\n\r\nexport class AccordionBody extends Component {\r\n    static propTypes = {\r\n        active: React.PropTypes.bool,\r\n        children: React.PropTypes.node,\r\n        defaultClasses: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        defaultClasses: true\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let classes = {\r\n            // default\r\n            ui: this.props.defaultClasses,\r\n\r\n            // positioning\r\n\r\n            // types\r\n\r\n            // states\r\n\r\n            // variations\r\n\r\n            // component\r\n            content: true,\r\n            active: true\r\n        };\r\n\r\n        /*\r\n        let didMount = function() {\r\n            this.setScrollHeight();\r\n            let computedStyle = window.getComputedStyle(ReactDOM.findDOMNode(this), null);\r\n\r\n            this.state.paddingTop = parseFloat(computedStyle.getPropertyValue('padding-top'));\r\n            this.state.paddingBottom = parseFloat(computedStyle.getPropertyValue('padding-bottom'));\r\n        };\r\n        */\r\n\r\n        //\r\n        let animation = {\r\n            state: this.props.active,\r\n            enterState: {\r\n                name: 'slideDown',\r\n                ease: 'cubic-out',\r\n                duration: 250,\r\n                options: {\r\n                    easing: 'cubic-out'\r\n                }\r\n            },\r\n            exitState: {\r\n                name: 'slideUp',\r\n                duration: 300,\r\n                options: {\r\n                    easing: 'cubic-out'\r\n                }\r\n            }\r\n        };\r\n\r\n        let childAnimation = {\r\n            state: this.props.active,\r\n            enterState: {\r\n                name: 'fadeIn',\r\n                duration: 300,\r\n                options: {\r\n                    easing: 'cubic-in'\r\n                }\r\n            },\r\n            exitState: {\r\n                name: 'fadeOut',\r\n                duration: 200,\r\n                options: {\r\n                    easing: 'cubic-out'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // handle all string or mixed string/bool props\r\n        return (\r\n                <Animate \r\n                    animation={animation}\r\n                    className={classNames(classes)}\r\n                    key=\"animate\"\r\n                > \r\n                    <Animate animation={childAnimation}>\r\n                        {this.props.children}\r\n                    </Animate>\r\n                </Animate>\r\n        );\r\n    }\r\n}"]}