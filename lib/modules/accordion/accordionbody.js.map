{"version":3,"sources":["../../../src/components/modules/accordion/accordionbody.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKqB;;;AAWjB,aAXiB,aAWjB,CAAY,KAAZ,EAAmB;8BAXF,eAWE;;sEAXF,0BAYP,QADS;KAAnB;;iBAXiB;;iCAeR;AACL,gBAAI,UAAU;;AAEV,oBAAI,KAAK,KAAL,CAAW,cAAX;;;;;;;;;;;AAWJ,yBAAS,IAAT;AACA,wBAAQ,IAAR;aAdA;;;;;;;;;;;;AADC,gBA6BD,YAAY;AACZ,uBAAO,KAAK,KAAL,CAAW,MAAX;AACP,4BAAY;AACR,0BAAM,WAAN;AACA,0BAAM,WAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,WAAR;qBADJ;iBAJJ;AAQA,2BAAW;AACP,0BAAM,SAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,WAAR;qBADJ;iBAHJ;aAVA,CA7BC;;AAgDL,gBAAI,iBAAiB;AACjB,uBAAO,KAAK,KAAL,CAAW,MAAX;AACP,4BAAY;AACR,0BAAM,QAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,UAAR;qBADJ;iBAHJ;AAOA,2BAAW;AACP,0BAAM,SAAN;AACA,8BAAU,GAAV;AACA,6BAAS;AACL,gCAAQ,WAAR;qBADJ;iBAHJ;aATA;;;AAhDC,mBAqEG;;;AACI,+BAAW,SAAX;AACA,+BAAW,0BAAW,OAAX,CAAX;AACA,yBAAI,SAAJ;iBAHJ;gBAKI;;sBAAS,WAAW,cAAX,EAAT;oBACK,KAAK,KAAL,CAAW,QAAX;iBANT;aADR,CApEK;;;;WAfQ;4BACV,YAAY;AACf,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;AACR,cAAU,gBAAM,SAAN,CAAgB,IAAhB;AACV,oBAAgB,gBAAM,SAAN,CAAgB,IAAhB;UAGb,eAAe;AAClB,oBAAgB,IAAhB;;kBARa","file":"accordionbody.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Animate } from '../../modules';\r\nimport classNames from 'classnames';\r\n\r\n// TODO: image and horizontal list examples\r\nexport default class AccordionBody extends Component {\r\n    static propTypes = {\r\n        active: React.PropTypes.bool,\r\n        children: React.PropTypes.node,\r\n        defaultClasses: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        defaultClasses: true\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let classes = {\r\n            // default\r\n            ui: this.props.defaultClasses,\r\n\r\n            // positioning\r\n\r\n            // types\r\n\r\n            // states\r\n\r\n            // variations\r\n\r\n            // component\r\n            content: true,\r\n            active: true\r\n        };\r\n\r\n        /*\r\n        let didMount = function() {\r\n            this.setScrollHeight();\r\n            let computedStyle = window.getComputedStyle(ReactDOM.findDOMNode(this), null);\r\n\r\n            this.state.paddingTop = parseFloat(computedStyle.getPropertyValue('padding-top'));\r\n            this.state.paddingBottom = parseFloat(computedStyle.getPropertyValue('padding-bottom'));\r\n        };\r\n        */\r\n\r\n        //\r\n        let animation = {\r\n            state: this.props.active,\r\n            enterState: {\r\n                name: 'slideDown',\r\n                ease: 'cubic-out',\r\n                duration: 250,\r\n                options: {\r\n                    easing: 'cubic-out'\r\n                }\r\n            },\r\n            exitState: {\r\n                name: 'slideUp',\r\n                duration: 300,\r\n                options: {\r\n                    easing: 'cubic-out'\r\n                }\r\n            }\r\n        };\r\n\r\n        let childAnimation = {\r\n            state: this.props.active,\r\n            enterState: {\r\n                name: 'fadeIn',\r\n                duration: 300,\r\n                options: {\r\n                    easing: 'cubic-in'\r\n                }\r\n            },\r\n            exitState: {\r\n                name: 'fadeOut',\r\n                duration: 200,\r\n                options: {\r\n                    easing: 'cubic-out'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // handle all string or mixed string/bool props\r\n        return (\r\n                <Animate \r\n                    animation={animation}\r\n                    className={classNames(classes)}\r\n                    key=\"animate\"\r\n                > \r\n                    <Animate animation={childAnimation}>\r\n                        {this.props.children}\r\n                    </Animate>\r\n                </Animate>\r\n        );\r\n    }\r\n}"]}