{"version":3,"sources":["../../../src/components/modules/popup/popupelement.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,IAAM,gCAAY,CAAC,UAAD,EAAa,YAAb,EAA2B,WAA3B,EAAwC,cAAxC,EACT,cADS,EACO,eADP,EACwB,aADxB,EACuC,aADvC,CAAZ;;;;;;IAOQ;;;;;;;;;;;iCA+CR;;yBAEoC,KAAK,KAAL,CAFpC;gBAEC,6BAFD;gBAEY,6BAFZ;;gBAE0B;;;;AAF1B,gBAMD,KAAK,KAAL,CAAW,SAAX,KAAyB,YAAzB,EAAuC;AACvC,4BAAY,KAAZ,CADuC;aAA3C,MAEO;AACH,4BAAY,KAAK,KAAL,CAAW,SAAX,CADT;aAFP;;;AANK,iBAaL,CAAM,GAAN,GAAY,OAAZ,CAbK;AAcL,kBAAM,SAAN,GAAkB,0BAAW,SAAX,EAAsB,KAAK,UAAL,EAAtB,CAAlB,CAdK;;AAgBL,mBAAO,gBAAM,aAAN,CACH,SADG,EAEH,KAFG,EAGH,KAAK,KAAL,CAAW,QAAX,CAHJ,CAhBK;;;;qCAuBI;AACT,gBAAI,UAAU;AACV,oBAAI,KAAK,KAAL,CAAW,cAAX;AACJ,uBAAO,KAAK,KAAL,CAAW,cAAX;AACP,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,sBAAM,KAAK,KAAL,CAAW,IAAX;AACN,yBAAS,IAAT;aARA,CADK;;AAYT,gBAAI,KAAK,KAAL,CAAW,IAAX,EAAiB;;AAEjB,oBAAI,OAAO,KAAK,KAAL,CAAW,IAAX,KAAoB,QAA3B,EAAqC;AACrC,4BAAQ,WAAR,IAAuB,IAAvB,CADqC;iBAAzC,MAEO;AACH,4BAAQ,MAAR,IAAkB,IAAlB,CADG;iBAFP;aAFJ;;AAUA,gBAAI,KAAK,KAAL,CAAW,IAAX,EAAiB;AACjB,wBAAQ,KAAK,KAAL,CAAW,IAAX,CAAR,GAA2B,IAA3B,CADiB;aAArB;;AAIA,gBAAI,WAAW,KAAK,KAAL,CAAW,QAAX,CAAoB,KAApB,CAA0B,GAA1B,CAAX,CA1BK;;AA4BT,qBAAS,OAAT,CAAiB,eAAO;AACpB,wBAAQ,GAAR,IAAe,IAAf,CADoB;aAAP,CAAjB,CA5BS;;AAgCT,mBAAO,OAAP,CAhCS;;;;WAtEI;EAAqB,gBAAM,SAAN,WAC/B,yBAIA,uBAAa,SAAb;;;;AAIH,WAAO,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIP,WAAO,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIP,aAAS,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIT,cAAU,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIV,UAAM,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,CACxB,MADwB,EAChB,MADgB,EACR,OADQ,EACC,OADD,EACU,MADV,CAAtB,CAAN;;;;AAMA,UAAM,gBAAM,SAAN,CAAgB,SAAhB,CAA0B,CAC5B,gBAAM,SAAN,CAAgB,IAAhB,EACA,gBAAM,SAAN,CAAgB,MAAhB,CAFE,CAAN;;;;AAOA,cAAU,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,CAAC,UAAD,EAAa,YAAb,EAA2B,WAA3B,EAAwC,cAAxC,EACxB,cADwB,EACR,eADQ,EACS,aADT,EACwB,aADxB,CAAtB,CAAV;YAIG,4BACA,uBAAa,YAAb;AACH,cAAU,UAAV;;;kBA5Ca","file":"popupelement.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport DefaultProps from '../../defaultProps';\r\nimport Radium from 'radium';\r\n\r\nexport const POSITIONS = ['top left', 'top center', 'top right', 'right center',\r\n                'bottom right', 'bottom center', 'bottom left', 'left center'];\r\n\r\n/**\r\n * Popup component without animation transitions\r\n */\r\n@Radium\r\nexport default class PopupElement extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * Default properties\r\n         */\r\n        ...DefaultProps.propTypes,\r\n        /**\r\n         * Basic popup variation\r\n         */\r\n        basic: React.PropTypes.bool,\r\n        /**\r\n         * Fluid popup\r\n         */\r\n        fluid: React.PropTypes.bool,\r\n        /**\r\n         * No maximum width and continue to flow to fit its content\r\n         */\r\n        flowing: React.PropTypes.bool,\r\n        /**\r\n         * Inverted popup\r\n         */\r\n        inverted: React.PropTypes.bool,\r\n        /**\r\n         * Popup size\r\n         */\r\n        size: React.PropTypes.oneOf([\r\n            'mini', 'tiny', 'small', 'large', 'huge'\r\n        ]),\r\n        /**\r\n         * Make content of popup wide\r\n         */\r\n        wide: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.string\r\n        ]),\r\n        /**\r\n         * Popup position\r\n         */\r\n        position: React.PropTypes.oneOf(['top left', 'top center', 'top right', 'right center',\r\n                'bottom right', 'bottom center', 'bottom left', 'left center'])\r\n    };\r\n    \r\n    static defaultProps = {\r\n        ...DefaultProps.defaultProps,\r\n        position: 'top left'\r\n    };\r\n\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let { className, component, ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n        // other.style = Object.assign({}, style, pStyle);\r\n\r\n        if (this.props.component === PopupElement) {\r\n            component = 'div';\r\n        } else {\r\n            component = this.props.component;\r\n        }\r\n\r\n        // Save ref to HTML element\r\n        other.ref = 'popup';\r\n        other.className = classNames(className, this.getClasses());\r\n\r\n        return React.createElement(\r\n            component,\r\n            other,\r\n            this.props.children\r\n        );\r\n    }\r\n\r\n    getClasses() {\r\n        let classes = {\r\n            ui: this.props.defaultClasses,\r\n            popup: this.props.defaultClasses,\r\n            basic: this.props.basic,\r\n            fluid: this.props.fluid,\r\n            flowing: this.props.flowing,\r\n            inverted: this.props.inverted,\r\n            wide: this.props.wide,\r\n            visible: true\r\n        };\r\n        \r\n        if (this.props.wide) {\r\n            // very wide\r\n            if (typeof this.props.wide === 'string') {\r\n                classes['very wide'] = true;\r\n            } else {\r\n                classes['wide'] = true;\r\n            }\r\n        }\r\n        \r\n        \r\n        if (this.props.size) {\r\n            classes[this.props.size] = true;\r\n        }\r\n\r\n        let position = this.props.position.split(' ');\r\n\r\n        position.forEach(pos => {\r\n            classes[pos] = true;\r\n        });\r\n\r\n        return classes;\r\n    }\r\n}\r\n"]}