{"version":3,"sources":["../../../src/components/modules/checkbox/checkboxfields.jsx"],"names":[],"mappings":"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","file":"checkboxfields.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox } from '../../modules';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\n@Radium\r\nexport class CheckboxFields extends Component {\r\n    static propTypes = {\r\n        children: React.PropTypes.oneOfType([\r\n            React.PropTypes.array,\r\n            React.PropTypes.node\r\n        ]),\r\n        className: React.PropTypes.node,\r\n        component: React.PropTypes.oneOfType([\r\n            React.PropTypes.element,\r\n            React.PropTypes.string\r\n        ]),\r\n        defaultClasses: React.PropTypes.bool,\r\n        disabled: React.PropTypes.bool,\r\n        name: React.PropTypes.string.isRequired,\r\n        onClick: React.PropTypes.func,\r\n        radio: React.PropTypes.bool,\r\n        readOnly: React.PropTypes.bool,\r\n        type: React.PropTypes.oneOf([\r\n            'grouped',\r\n            'inline'\r\n        ]).isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        component: 'div',\r\n        defaultClasses: true\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let active = this.props.radio ? -1 : [];\r\n\r\n        this.state = {\r\n            active: active\r\n        };\r\n    }\r\n\r\n    onClick(key)  {\r\n        // don't remove radio buttons if you click them twice\r\n        if (key === this.state.active && this.props.radio) {\r\n            return;\r\n        // but do remove for everything else\r\n        } else {\r\n            this.setActive(key);\r\n        }\r\n    }\r\n\r\n    renderChildren() {\r\n        let index = 0;\r\n        let element = null;\r\n\r\n        if (React.Children.count(this.props.children) === 1) {\r\n            return this.cloneChild(index,\r\n                React.Children.only(this.props.children)\r\n            );\r\n        } else {\r\n            return React.Children.map(this.props.children, child => {\r\n                if (child.type == Checkbox) {\r\n                    element = this.cloneChild(index, child);\r\n\r\n                    element = React.DOM.div({\r\n                        key: index,\r\n                        className: 'field'\r\n                    }, element);\r\n\r\n                    index++;\r\n                } else if (typeof child === 'string') {\r\n                    return (\r\n                        <label htmlFor={this.props.name}>{child}</label>\r\n                    );\r\n                } else {\r\n                    element = child;\r\n                }\r\n\r\n                return element;\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let { component, defaultClasses, name, ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n        other.className = classNames(this.props.className, this.getClasses());\r\n\r\n        return React.createElement(\r\n            this.props.component,\r\n            other,\r\n            this.renderChildren()\r\n        );\r\n    }\r\n\r\n    // clone a chid and update the props\r\n    cloneChild(index, child) {\r\n        let boundClick = this.onClick.bind(this, index);\r\n\r\n        /* eslint-disable no-use-before-define */\r\n        let { children, component, defaultClasses, onClick, type,\r\n              ...other } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        return React.cloneElement(child, {\r\n            key: index,\r\n            checked: this.getActive(index),\r\n            onClick: boundClick,\r\n            radio: this.props.radio,\r\n            readOnly: this.props.readOnly || this.props.disabled,\r\n            ...other\r\n        });\r\n    }\r\n\r\n    getClasses() {\r\n        let classes = {\r\n            // default\r\n\r\n            // positioning\r\n\r\n            // types\r\n\r\n            // component\r\n\r\n            // variations\r\n            fields: React.Children.count(this.props.children) > 1\r\n        };\r\n\r\n        classes[this.props.type] = !!this.props.type;\r\n\r\n        return classes;\r\n    }\r\n\r\n    getActive(index) {\r\n        let state = this.state.active;\r\n        let active = false;\r\n\r\n        if (Array.isArray(state)) {\r\n            active = state.indexOf(index) > -1 ? true : false;\r\n        } else {\r\n            active = state == index ? true : false;\r\n        }\r\n\r\n        return active;\r\n    }\r\n\r\n    setActive(index) {\r\n        if (this.props.readOnly || this.props.disabled) return;\r\n\r\n        let state = this.state.active;\r\n\r\n        // should only be an array if it's checkbox, not radio\r\n        // IE 9+ for indexOf\r\n        if (Array.isArray(state)) {\r\n            let position = state.indexOf(index);\r\n\r\n            if (position > -1) {\r\n                state.splice(position, 1);\r\n            } else {\r\n                state.push(index);\r\n            }\r\n\r\n        // it's a radio\r\n        } else {\r\n            state = index;\r\n        }\r\n\r\n        this.setState({\r\n            active: state\r\n        });\r\n    }\r\n}\r\n"]}