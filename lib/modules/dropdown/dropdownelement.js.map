{"version":3,"sources":["../../../src/components/modules/dropdown/dropdownelement.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,aAAa;AACf,cAAU,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,WAA9B,EAA2C,aAA3C,EAA0D,cAA1D,CAAV;CADE;;;;;IAOe;;;;;;;;;;;0CA4DC;AACd,mBAAO;AACH,iCAAiB,IAAjB;aADJ,CADc;;;;iCAMT;;yBAKD,KAAK,KAAL,CALC;gBAGD,6BAHC;gBAGU,2BAHV;gBAGoB,uCAHpB;gBAGoC,yBAHpC;gBAG6C,2BAH7C;gBAGuD,qBAHvD;gBAG8D,yBAH9D;gBAID,qBAJC;gBAIM,uBAJN;gBAIc,2BAJd;gBAIwB,2BAJxB;gBAIkC,6BAJlC;;gBAIgD;;;AAJhD,iBAQL,CAAM,SAAN,GAAkB,0BAAW,MAAM,SAAN,EAAiB,KAAK,UAAL,EAA5B,CAAlB,CARK;;AAUL,gBAAI,YAAY,SAAZ,CAVC;;AAYL,mBACI;AAAC,yBAAD;gBAAe,KAAf;gBACK,QADL;aADJ,CAZK;;;;qCAmBI;AACT,gBAAI,UAAU;AACV,oBAAI,KAAK,KAAL,CAAW,cAAX;AACJ,0BAAU,KAAK,KAAL,CAAW,cAAX;;AAEV,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,yBAAS,KAAK,KAAL,CAAW,OAAX;AACT,uBAAO,KAAK,KAAL,CAAW,KAAX;AACP,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,wBAAQ,KAAK,KAAL,CAAW,MAAX;AACR,0BAAU,KAAK,KAAL,CAAW,QAAX;AACV,2BAAW,KAAK,KAAL,CAAW,SAAX;aAbX,CADK;;AAiBT,mBAAO,mCAAmB,OAAnB,EAA4B,KAAK,KAAL,EAAY,UAAxC,CAAP,CAjBS;;;;WArFI;EAAwB,gBAAM,SAAN,UAClC,yBACA,uBAAa,SAAb;;;;AAIH,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIR,aAAS,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIT,cAAU,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIV,WAAO,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIP,WAAO,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIP,YAAQ,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIR,cAAU,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIV,aAAS,gBAAM,SAAN,CAAgB,IAAhB;;;;AAIT,cAAU,gBAAM,SAAN,CAAgB,SAAhB,CAA0B,CAChC,gBAAM,SAAN,CAAgB,IAAhB,EACA,gBAAM,SAAN,CAAgB,KAAhB,CAAsB,CAClB,MADkB,EACV,OADU,EACD,UADC,EACW,WADX,EACwB,aADxB,EACuC,cADvC,CAAtB,CAFgC,CAA1B,CAAV;;;;AASA,eAAW,gBAAM,SAAN,CAAgB,IAAhB;WAGR,oBAAoB;AACvB,qBAAiB,gBAAM,SAAN,CAAgB,IAAhB;UAGd,4BACA,uBAAa,YAAb;AACH,YAAQ,KAAR;;kBAxDa","file":"dropdownelement.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { validateClassProps } from '../../utilities';\r\nimport DefaultProps  from '../../defaultProps';\r\n\r\nconst validProps = {\r\n    pointing: ['left', 'right', 'top left', 'top right', 'bottom left', 'bottom right']\r\n};\r\n\r\n/**\r\n * Dropdown element. Base for Select and DropdownMenu.\r\n */\r\nexport default class DropdownElement extends React.Component {\r\n    static propTypes = {\r\n        ...DefaultProps.propTypes,\r\n        /**\r\n         * Indicates status of dropdown. true for opened, false for closed\r\n         */\r\n        active: React.PropTypes.bool,\r\n        /**\r\n         * A compact dropdown has no minimum width\r\n         */\r\n        compact: React.PropTypes.bool,\r\n        /**\r\n         * A disabled dropdown menu or item does not allow user interaction\r\n         */\r\n        disabled: React.PropTypes.bool,\r\n        /**\r\n         * An errored dropdown can alert a user to a problem\r\n         */\r\n        error: React.PropTypes.bool,\r\n        /**\r\n         * A dropdown can take the full width of its parent\r\n         */\r\n        fluid: React.PropTypes.bool,\r\n        /**\r\n         * A dropdown can be formatted to appear inline in other content\r\n         */\r\n        inline: React.PropTypes.bool,\r\n        /**\r\n         * A dropdown menu can appear to be floating below an element.\r\n         */\r\n        floating: React.PropTypes.bool,\r\n        /**\r\n         * A dropdown can show that it is currently loading data\r\n         */\r\n        loading: React.PropTypes.bool,\r\n        /**\r\n         * A dropdown can be formatted so that its menu is pointing\r\n         */\r\n        pointing: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.oneOf([\r\n                'left', 'right', 'top left', 'top right', 'bottom left', 'bottom right'\r\n            ])\r\n        ]),\r\n        /**\r\n         * A dropdown can have its menu scroll\r\n         */\r\n        scrolling: React.PropTypes.bool\r\n    };\r\n\r\n    static childContextTypes = {\r\n        isDropdownChild: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        ...DefaultProps.defaultProps,\r\n        active: false\r\n    };\r\n\r\n\r\n    getChildContext() {\r\n        return {\r\n            isDropdownChild: true\r\n        };\r\n    }\r\n\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let { \r\n            component, children, defaultClasses, compact, disabled, error, loading, \r\n            fluid, inline, floating, pointing, scrolling, ...other \r\n        } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n        \r\n        other.className = classNames(other.className, this.getClasses());\r\n\r\n        let Component = component;\r\n        \r\n        return (\r\n            <Component {...other}>\r\n                {children}\r\n            </Component>\r\n        );\r\n    }\r\n\r\n    getClasses() {\r\n        let classes = {\r\n            ui: this.props.defaultClasses,\r\n            dropdown: this.props.defaultClasses,\r\n            \r\n            active: this.props.active,\r\n            compact: this.props.compact,\r\n            disabled: this.props.disabled,\r\n            error: this.props.error,\r\n            loading: this.props.loading,\r\n            fluid: this.props.fluid,\r\n            floating: this.props.floating,\r\n            inline: this.props.inline,\r\n            pointing: this.props.pointing,\r\n            scrolling: this.props.scrolling\r\n        };\r\n        \r\n        return validateClassProps(classes, this.props, validProps);\r\n    }\r\n}\r\n"]}