{"version":3,"sources":["../../../src/components/modules/dropdown/dropdownmenu.jsx"],"names":[],"mappings":"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","file":"dropdownmenu.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Transition from 'react-motion-ui-pack';\r\nimport EventListener from 'react-event-listener';\r\nimport classNames from 'classnames';\r\nimport { validateClassProps, isNodeInRoot } from '../../utilities';\r\nimport { Icon, Text } from '../../elements';\r\nimport { Menu } from '../../views';\r\nimport DropdownElement from './dropdownelement';\r\nimport elementType from 'react-prop-types/lib/elementType'; \r\n\r\n\r\n/**\r\n * Dropdown menu with animations\r\n */\r\nexport default class DropdownMenu extends React.Component {\r\n    static propTypes = {\r\n        ...DropdownElement.propTypes,\r\n        /**\r\n         * Should menu be opened when first rendered\r\n         */\r\n        active: React.PropTypes.bool,\r\n        /**\r\n         * Enter animations transforms\r\n         */\r\n        enterAnimation: React.PropTypes.object,\r\n        /**\r\n         * Menu icon\r\n         */\r\n        icon: React.PropTypes.string,\r\n        /**\r\n         * Menu label\r\n         */\r\n        label: React.PropTypes.string,\r\n        /**\r\n         * Leave animation\r\n         */\r\n        leaveAnimation: React.PropTypes.object,\r\n        /**\r\n         * Specify component to be used as Menu.\r\n         * Usually is should be menu but with custom options applied (for example inverted). \r\n         * DropdownMenu will pass some props to your Menu component, so you're responsive for passing it down to the level\r\n         */\r\n        menuComponent: elementType,\r\n        /**\r\n         * Menu item click callback\r\n         */\r\n        onMenuItemClick: React.PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        ...DropdownElement.defaultProps,\r\n        active: false,\r\n        icon: 'dropdown',\r\n        enterAnimation: {\r\n            height: 'auto'\r\n        },\r\n        leaveAnimation: {\r\n            height: 0\r\n        },\r\n        onMenuItemClick: () => {}\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /**\r\n         * Menu reference\r\n         */\r\n        this.menuRef = null;\r\n        \r\n        this.state = {\r\n            active: props.active\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.active && this.state.active !== nextProps.active) {\r\n            this.setState({\r\n                active: nextProps.active\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dropdown click\r\n     * @param {React.MouseEvent} e\r\n     */\r\n    onDropdownElementClick = (e) => {\r\n        // clicking the arrow/search box or dropdown area\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            active: !this.state.active\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Menu item click\r\n     * @param value\r\n     */\r\n    onMenuItemClick = (value) => {\r\n        // click an option\r\n\r\n        this.setState({\r\n            active: false\r\n        });\r\n        \r\n        this.props.onMenuItemClick(value);\r\n    };\r\n\r\n    /**\r\n     * Outside dropdown click\r\n     * @param {React.MouseEvent} e\r\n     */\r\n    onOutsideDropdownClick = (e) => {\r\n        if (!this.state.active || !this.menuRef) {\r\n            return;\r\n        }\r\n        const menuElement = ReactDOM.findDOMNode(this.menuRef);\r\n        if (menuElement) {\r\n            if (!isNodeInRoot(e.target, menuElement)) {\r\n                this.setState({\r\n                    active: false\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Renders dropdown icon\r\n     * @returns {*}\r\n     */\r\n    renderMenuIcon() {\r\n        if (typeof this.props.component === 'function') {\r\n            return null;\r\n        } else {\r\n            return <Icon name={this.props.icon}/>\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders dropdown text\r\n     * @returns {*}\r\n     */\r\n    renderMenuText() {\r\n        if (typeof this.props.component === 'function' || !this.props.label) {\r\n            return null;\r\n        } else {\r\n            return <Text>{this.props.label}</Text>\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render\r\n     * @returns {JSX.Element}\r\n     */\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let {\r\n            active, enterAnimation, leaveAnimation, children, icon, label, menuComponent, onMenuItemClick, ...other\r\n        } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        const MenuComponent = menuComponent || Menu;\r\n\r\n\r\n        return (\r\n            <DropdownElement\r\n                {...other}\r\n                active={this.state.active}\r\n                onClick={this.onDropdownElementClick}\r\n            >\r\n                {/* This will embed <noscript></noscript> inside dropdown div. Shouldn't cause any problems */}\r\n                <EventListener elementName=\"document\"\r\n                               onMouseDown={this.onOutsideDropdownClick}\r\n                               onTouchStart={this.onOutsideDropdownClick}/>\r\n                {this.renderMenuText()}\r\n                {this.renderMenuIcon()}\r\n                <Transition\r\n                    component={false}\r\n                    enter={this.props.enterAnimation}\r\n                    leave={this.props.leaveAnimation}\r\n                >\r\n                    {this.state.active &&\r\n                    <MenuComponent key=\"menu\"\r\n                                   onMenuItemClick={this.onMenuItemClick}\r\n                                   ref={ref => this.menuRef = ref}\r\n                                   style={{ overflow: 'hidden' }}\r\n                    >\r\n                        {children}\r\n                    </MenuComponent>\r\n                    }\r\n                </Transition>\r\n            </DropdownElement>\r\n        );\r\n    }\r\n}\r\n\r\n"]}