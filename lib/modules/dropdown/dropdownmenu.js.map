{"version":3,"sources":["../../../src/components/modules/dropdown/dropdownmenu.jsx"],"names":[],"mappings":"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","file":"dropdownmenu.js","sourcesContent":["import React from 'react';\r\nimport { Dropdown } from '../../modules';\r\nimport Transition from 'react-motion-ui-pack';\r\nimport { Icon, Text } from '../../elements';\r\nimport { Menu } from '../../views';\r\nimport ListensToClickOutside from 'react-onclickoutside/decorator';\r\n\r\n\r\n/**\r\n * Dropdown menu with animations\r\n */\r\n@ListensToClickOutside\r\nexport class DropdownMenu extends React.Component {\r\n    static propTypes = {\r\n        /**\r\n         * Should menu be opened when first rendered\r\n         */\r\n        active: React.PropTypes.bool,\r\n        /**\r\n         * Children nodes\r\n         */\r\n        children: React.PropTypes.node,\r\n        /**\r\n         * Pass additional component to use in dropdown, for example Button.\r\n         * If you specify it, then default icon and label won't be rendered\r\n         */\r\n        dropdownComponent: React.PropTypes.oneOfType([\r\n            React.PropTypes.element,\r\n            React.PropTypes.string,\r\n            React.PropTypes.func\r\n        ]),\r\n        /**\r\n         * Enter animations transforms\r\n         */\r\n        enterAnimation: React.PropTypes.object,\r\n        /**\r\n         * Menu icon\r\n         */\r\n        icon: React.PropTypes.string,\r\n        /**\r\n         * Menu label\r\n         */\r\n        label: React.PropTypes.string,\r\n        /**\r\n         * Leave animation\r\n         */\r\n        leaveAnimation: React.PropTypes.object,\r\n        /**\r\n         * Specify component to be used as Menu.\r\n         * Usually is should be menu but with custom options applied (for example inverted)\r\n         */\r\n        menuComponent: React.PropTypes.oneOfType([\r\n            React.PropTypes.element,\r\n            React.PropTypes.string,\r\n            React.PropTypes.func\r\n        ])\r\n    };\r\n\r\n    static defaultProps = {\r\n        active: false,\r\n        icon: 'dropdown',\r\n        dropdownComponent: 'div',\r\n        enterAnimation: {\r\n            height: 'auto'\r\n        },\r\n        leaveAnimation: {\r\n            height: 0\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: props.active,\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Menu animation completed\r\n     */\r\n    onAnimationComplete() {\r\n        // visible state differs from active in that it\r\n        // cna only change after completion of the animation\r\n        if (!this.state.active) {\r\n            this.setState({\r\n                visible: false\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dropdown click\r\n     * @param e\r\n     */\r\n    onClick(e) {\r\n        // clicking the arrow/search box or dropdown area\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n\r\n        if (!this.state.active) {\r\n            this.setState({\r\n                active: true,\r\n                visible: true\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Menu item click\r\n     * @param e\r\n     */\r\n    onMenuItemClick(e) {\r\n        // click an option\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            active: false\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Renders dropdown icon\r\n     * @returns {*}\r\n     */\r\n    renderMenuIcon() {\r\n        if (this.props.dropdownComponent !== 'div') {\r\n            return null;\r\n        } else {\r\n            return <Icon name={this.props.icon}/>\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders dropdown text\r\n     * @returns {*}\r\n     */\r\n    renderMenuText() {\r\n        if (this.props.dropdownComponent !== 'div' || !this.props.label) {\r\n            return null;\r\n        } else {\r\n            return <Text>{this.props.label}</Text>\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders children items\r\n     * @returns {Array}\r\n     */\r\n    renderChildren() {\r\n        let newChildren = [];\r\n\r\n        React.Children.forEach(this.props.children, child => {\r\n            newChildren.push(\r\n                React.cloneElement(\r\n                    child,\r\n                    {\r\n                        key: child.props.children,\r\n                        onClick: this.onMenuItemClick.bind(this)\r\n                    },\r\n                    child.props.children\r\n                )\r\n            );\r\n        });\r\n\r\n        return newChildren;\r\n    }\r\n\r\n    /**\r\n     * Render\r\n     * @returns {XML}\r\n     */\r\n    render() {\r\n        /* eslint-disable no-use-before-define */\r\n        let {\r\n            active, icon, label, dropdownComponent, menuComponent, ...other\r\n        } = this.props;\r\n        /* eslint-enable no-use-before-define */\r\n\r\n        // other.className = classNames(this.props.className, this.getClasses());\r\n        other.onClick = this.onClick.bind(this);\r\n\r\n        const MenuComponent = menuComponent || Menu;\r\n\r\n        let children = this.renderChildren();\r\n\r\n        return (\r\n            <Dropdown\r\n                {...other}\r\n                active={this.state.active}\r\n                component={dropdownComponent}\r\n                visible={this.state.visible}\r\n            >\r\n                {this.renderMenuText()}\r\n                {this.renderMenuIcon()}\r\n                <Transition\r\n                    component={false}\r\n                    enter={this.props.enterAnimation}\r\n                    leave={this.props.leaveAnimation}\r\n                >\r\n                    {this.state.active &&\r\n                    <MenuComponent key=\"menu\"\r\n                                   style={{ overflow: 'hidden' }}\r\n                    >\r\n                        {children}\r\n                    </MenuComponent>\r\n                    }\r\n                </Transition>\r\n            </Dropdown>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Outside click handler\r\n     */\r\n    handleClickOutside() {\r\n        if (this.state.active) {\r\n            this.setState({\r\n                active: false\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n"]}