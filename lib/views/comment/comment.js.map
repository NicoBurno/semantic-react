{"version":3,"sources":["../../../src/components/views/comment/comment.jsx"],"names":[],"mappings":";;;;;;qBAAkB,OAAO;;;;wBACM,gBAAgB;;0BACxB,YAAY;;;;sBAChB,QAAQ;;;;AAE3B,SAAS,cAAc,CAAC,QAAQ,EAAE;AAC9B,QAAI,eAAe,GAAG,EAAE,CAAC;AACzB,QAAI,eAAe,GAAG,EAAE,CAAC;;AAEzB,uBAAM,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAA,KAAK,EAAI;;AAEtC,YAAI,KAAK,CAAC,IAAI,oBAAU,EAAE;AACtB,2BAAe,CAAC,IAAI,CAChB,mBAAM,YAAY,CACd,KAAK,EACL;AACI,yBAAS,EAAE,GAAG;AACd,sBAAM,EAAE,IAAI;AACZ,mBAAG,EAAE,eAAe;AACpB,8BAAc,EAAE,KAAK;aACxB,EACD,KAAK,CAAC,QAAQ,CACjB,CACJ,CAAC;SACL,MAAM;AACH,mBAAO,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtC;KACJ,CAAC,CAAC;;AAEH,mBAAe,CAAC,IAAI,CAChB;;UAAS,GAAG,EAAC,gBAAgB;QACxB,eAAe;KACV,CACb,CAAC;;AAEF,WAAO,eAAe,CAAC;CAC1B;;AAED,IAAI,OAAO,GAAG,SAAV,OAAO,CAAI,IAA4C,EAAK;QAA/C,QAAQ,GAAV,IAA4C,CAA1C,QAAQ;QAAE,SAAS,GAArB,IAA4C,CAAhC,SAAS;QAAE,SAAS,GAAhC,IAA4C,CAArB,SAAS;;QAAK,KAAK,4BAA1C,IAA4C;;AACvD,SAAK,CAAC,SAAS,GAAG,6BAAW,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;;AAE3D,WAAO,mBAAM,aAAa,CACtB,SAAS,EACT,KAAK,EACL,cAAc,CAAC,QAAQ,CAAC,CAC3B,CAAC;CACL,CAAC;;AAEF,OAAO,CAAC,SAAS,GAAG;AAChB,YAAQ,EAAE,mBAAM,SAAS,CAAC,IAAI;AAC9B,aAAS,EAAE,mBAAM,SAAS,CAAC,GAAG;AAC9B,aAAS,EAAE,mBAAM,SAAS,CAAC,SAAS,CAAC,CACjC,mBAAM,SAAS,CAAC,OAAO,EACvB,mBAAM,SAAS,CAAC,MAAM,CACzB,CAAC;CACL,CAAA;;AAED,OAAO,CAAC,YAAY,GAAG;AACnB,aAAS,EAAE,KAAK;CACnB,CAAA;;AAED,OAAO,CAAC,OAAO,GAAG,yBAAO,OAAO,CAAC,CAAC","file":"comment.js","sourcesContent":["import React from 'react';\r\nimport { Image, Content } from '../../elements';\r\nimport classNames from 'classnames';\r\nimport Radium from 'radium';\r\n\r\nfunction renderChildren(children) {\r\n    let commentChildren = [];\r\n    let contentChildren = [];\r\n\r\n    React.Children.forEach(children, child => {\r\n        // remove the Image default classes\r\n        if (child.type === Image) {\r\n            commentChildren.push(\r\n                React.cloneElement(\r\n                    child,\r\n                    {\r\n                        component: 'a',\r\n                        avatar: true,\r\n                        key: 'commentAvatar',\r\n                        defaultClasses: false\r\n                    },\r\n                    child.children\r\n                )\r\n            );\r\n        } else {\r\n            return contentChildren.push(child);\r\n        }\r\n    });\r\n\r\n    commentChildren.push(\r\n        <Content key=\"commentContent\">\r\n            {contentChildren}\r\n        </Content>\r\n    );\r\n\r\n    return commentChildren;\r\n}\r\n\r\nlet Comment = ({ children, className, component, ...other }) => {\r\n    other.className = classNames(className, { comment: true });\r\n\r\n    return React.createElement(\r\n        component,\r\n        other,\r\n        renderChildren(children)\r\n    );\r\n};\r\n\r\nComment.propTypes = {\r\n    children: React.PropTypes.node,\r\n    className: React.PropTypes.any,\r\n    component: React.PropTypes.oneOfType([\r\n        React.PropTypes.element,\r\n        React.PropTypes.string\r\n    ])\r\n}\r\n\r\nComment.defaultProps = {\r\n    component: 'div'\r\n}\r\n\r\nexports.Comment = Radium(Comment);\r\n"]}